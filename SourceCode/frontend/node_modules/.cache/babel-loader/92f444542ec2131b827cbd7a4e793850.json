{"ast":null,"code":"/**\n * Created by Basil on 6/1/20.\n */\n\n/*\nimport React from 'react';\nimport '../../App.css';\nimport {showMessage} from '../../Utils/Util';\nimport {STATUS_ACTIVE} from '../../Utils/Constants';\nimport {API_URL} from '../../Utils/Urls';\nimport {ajaxPost,ajaxPut} from '../../Services/Http/Ajax';\nimport Checkbox from \"../General/CheckBoxComponent\";\nimport {ToastContainer} from \"react-toastify\";\n\nconst MenuPermissionComponent = (props) => {\n    const [menuFetched, setMenuFetched] = React.useState(false);\n    const [subMenuArray, setSubMenuArray] = React.useState([]);\n    const [isMainMenuActive, setIsMainMenuActive] = React.useState(false);\n    const {menuId, roleId,agencyId } = props;\n\n    const usePrevious = (value) => {\n        const ref = React.useRef();\n        React.useEffect(() => {\n            ref.current = value;\n        });\n        return ref.current;\n    };\n    const previousMenuId = usePrevious(menuId);\n    const previousRoleId = usePrevious(roleId);\n    const previousAgencyId = usePrevious(agencyId);\n    const getMenuPermissionData = () => {\n        if (roleId && menuId) {\n            let postData = {\n                data:{\n                    roleId: roleId,\n                    menuId: menuId,\n                    agencyId:agencyId\n                }\n            };\n            let uri = API_URL.MENU_PERMISSION_URL;\n            ajaxPost(uri, postData, getMenuPermissionDataSuccess)\n        }\n    };\n\n    const getMenuPermissionDataSuccess = (response) => {\n        if (response.status === STATUS_ACTIVE) {\n            let menuData;\n            menuData = response.content;\n            let menuNewTemp = menuData.map((item)=> { return {...item, is_active: item.is_active === 1}  } );\n            setSubMenuArray(menuNewTemp);\n            setMenuFetched(true);\n            setIsMainMenuActive(menuNewTemp[0].is_active);\n        }\n    };\n\n    React.useEffect(() => {\n        if(previousMenuId !== menuId || previousRoleId.roleId !== roleId || previousAgencyId !== agencyId) {\n            getMenuPermissionData();\n        }\n    }, [menuId, roleId,agencyId]);\n\n    const putMenuPermissionData = (event) => {\n        let data = {\n            data: {\n                menu_permission_id: event.target.getAttribute(\"dataid\"),\n                is_active: event.target.checked,\n                role_id: props.roleId,\n                sub_menu_id: event.target.id,\n                agency_id:props.agencyId\n            }\n        };\n        let uri = API_URL.MENU_PERMISSION_URL;\n        ajaxPut(uri, data, (response) => {\n            if (response.status === STATUS_ACTIVE) {\n                showMessage('success', response.message)\n            }\n        });\n    };\n\n    const makeSubMenuCheckBoxDisabled = (e) => {\n        setIsMainMenuActive(e.target.checked);\n    };\n\n    const handleChange = (e) => {\n        const item = parseInt(e.target.id);\n        setSubMenuArray(subMenuArray.map((elem)=>{\n            let tempData = elem;\n            if(tempData.sub_menu_id === item){\n                tempData.is_active = e.target.checked;\n            }\n            return tempData;\n        }));\n        putMenuPermissionData(e);\n    };\n\n    return (\n        <div>\n            <ToastContainer/>\n            <div className=\"menu-permission\">\n                {\n                    menuFetched && (\n                        <div className=\"data-bind-role\">\n                            <span className=\"btn text-info\"> {subMenuArray[0].menu_name} <input onChange={makeSubMenuCheckBoxDisabled} checked={isMainMenuActive} type=\"checkBox\" name=\"menuPermission\"/></span>\n                            <div>\n                                { subMenuArray.map( (value, index) => {\n                                    return <div key={index}>\n                                        <div className=\"sub-menu-container\">\n                                            <div>{value.sub_menu_name} </div>\n                                            <div> <Checkbox name={`submenu-${value.sub_menu_id}`} dataid={value.menu_permission_id} id={value.sub_menu_id} checked={value['is_active']} disabled = {!isMainMenuActive} onChangeFunction={handleChange} /></div>\n                                        </div>\n                                    </div>\n                                })\n                                }\n                            </div>\n                        </div>\n                    )}\n            </div>\n        </div>\n    )\n};\n\nexport default MenuPermissionComponent;*/","map":{"version":3,"sources":["/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/MenuPermission/MenuPermissionComponent.js"],"names":[],"mappings":"AAAA;;;;AAGA","sourcesContent":["/**\n * Created by Basil on 6/1/20.\n */\n/*\nimport React from 'react';\nimport '../../App.css';\nimport {showMessage} from '../../Utils/Util';\nimport {STATUS_ACTIVE} from '../../Utils/Constants';\nimport {API_URL} from '../../Utils/Urls';\nimport {ajaxPost,ajaxPut} from '../../Services/Http/Ajax';\nimport Checkbox from \"../General/CheckBoxComponent\";\nimport {ToastContainer} from \"react-toastify\";\n\nconst MenuPermissionComponent = (props) => {\n    const [menuFetched, setMenuFetched] = React.useState(false);\n    const [subMenuArray, setSubMenuArray] = React.useState([]);\n    const [isMainMenuActive, setIsMainMenuActive] = React.useState(false);\n    const {menuId, roleId,agencyId } = props;\n\n    const usePrevious = (value) => {\n        const ref = React.useRef();\n        React.useEffect(() => {\n            ref.current = value;\n        });\n        return ref.current;\n    };\n    const previousMenuId = usePrevious(menuId);\n    const previousRoleId = usePrevious(roleId);\n    const previousAgencyId = usePrevious(agencyId);\n    const getMenuPermissionData = () => {\n        if (roleId && menuId) {\n            let postData = {\n                data:{\n                    roleId: roleId,\n                    menuId: menuId,\n                    agencyId:agencyId\n                }\n            };\n            let uri = API_URL.MENU_PERMISSION_URL;\n            ajaxPost(uri, postData, getMenuPermissionDataSuccess)\n        }\n    };\n\n    const getMenuPermissionDataSuccess = (response) => {\n        if (response.status === STATUS_ACTIVE) {\n            let menuData;\n            menuData = response.content;\n            let menuNewTemp = menuData.map((item)=> { return {...item, is_active: item.is_active === 1}  } );\n            setSubMenuArray(menuNewTemp);\n            setMenuFetched(true);\n            setIsMainMenuActive(menuNewTemp[0].is_active);\n        }\n    };\n\n    React.useEffect(() => {\n        if(previousMenuId !== menuId || previousRoleId.roleId !== roleId || previousAgencyId !== agencyId) {\n            getMenuPermissionData();\n        }\n    }, [menuId, roleId,agencyId]);\n\n    const putMenuPermissionData = (event) => {\n        let data = {\n            data: {\n                menu_permission_id: event.target.getAttribute(\"dataid\"),\n                is_active: event.target.checked,\n                role_id: props.roleId,\n                sub_menu_id: event.target.id,\n                agency_id:props.agencyId\n            }\n        };\n        let uri = API_URL.MENU_PERMISSION_URL;\n        ajaxPut(uri, data, (response) => {\n            if (response.status === STATUS_ACTIVE) {\n                showMessage('success', response.message)\n            }\n        });\n    };\n\n    const makeSubMenuCheckBoxDisabled = (e) => {\n        setIsMainMenuActive(e.target.checked);\n    };\n\n    const handleChange = (e) => {\n        const item = parseInt(e.target.id);\n        setSubMenuArray(subMenuArray.map((elem)=>{\n            let tempData = elem;\n            if(tempData.sub_menu_id === item){\n                tempData.is_active = e.target.checked;\n            }\n            return tempData;\n        }));\n        putMenuPermissionData(e);\n    };\n\n    return (\n        <div>\n            <ToastContainer/>\n            <div className=\"menu-permission\">\n                {\n                    menuFetched && (\n                        <div className=\"data-bind-role\">\n                            <span className=\"btn text-info\"> {subMenuArray[0].menu_name} <input onChange={makeSubMenuCheckBoxDisabled} checked={isMainMenuActive} type=\"checkBox\" name=\"menuPermission\"/></span>\n                            <div>\n                                { subMenuArray.map( (value, index) => {\n                                    return <div key={index}>\n                                        <div className=\"sub-menu-container\">\n                                            <div>{value.sub_menu_name} </div>\n                                            <div> <Checkbox name={`submenu-${value.sub_menu_id}`} dataid={value.menu_permission_id} id={value.sub_menu_id} checked={value['is_active']} disabled = {!isMainMenuActive} onChangeFunction={handleChange} /></div>\n                                        </div>\n                                    </div>\n                                })\n                                }\n                            </div>\n                        </div>\n                    )}\n            </div>\n        </div>\n    )\n};\n\nexport default MenuPermissionComponent;*/\n"]},"metadata":{},"sourceType":"module"}