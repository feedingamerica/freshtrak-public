{"ast":null,"code":"var _jsxFileName = \"/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/Agency/AgencyListComponent.js\";\nimport React, { Component } from 'react';\nimport * as urls from \"../../Utils/Urls\";\nimport * as constants from '../../Utils/Constants';\nimport { ajaxGet } from \"../../Services/Http/Ajax\";\nimport { ajaxPost } from \"../../Services/Http/Ajax\";\nimport '../../App.css';\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/esm/Button\";\n\nclass AgencyListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      let agencyData;\n      let uri = urls.API_URL.GET_AGENCY_LIST_URL;\n      ajaxGet(uri, response => {\n        console.log(\"fgjh\", response);\n\n        if (response.status === constants.STATUS_ACTIVE) {\n          agencyData = response.content;\n          let agencyArray = agencyData.map(name => {\n            return name;\n          });\n          console.log(\"array:\", agencyArray);\n          this.setState({\n            agencyList: agencyArray\n          });\n          console.log(\"hello\", this.state.agencyList);\n        }\n      });\n    };\n\n    this.editHandler = v => {\n      let edittedAgencyData = {\n        name: this.state.agencyList.name,\n        nickname: this.state.agencyList.nickname,\n        address1: this.state.agencyList.address1,\n        address2: this.state.agencyList.address2\n      };\n      console.log(edittedAgencyData);\n    };\n\n    this.handleChange = e => {\n      let agencyData;\n      let uri = urls.API_URL.GET_AGENCY_LIST_URL;\n      ajaxPost(uri, response => {\n        if (response.status === constants.STATUS_ACTIVE) {\n          agencyData = response.content;\n          let agencyArray = agencyData.map(name => {\n            return name;\n          });\n          this.setState({\n            agencyList: agencyArray\n          });\n        }\n      });\n    };\n\n    this.editHandler = this.editHandler.bind(this);\n    this.state = {\n      agencyList: []\n    };\n  }\n\n  render() {\n    let addAgencyUrl = urls.RENDER_URL.AGENCY_URL;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: addAgencyUrl\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Create Agency\"))), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"AgencyList:\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Agency\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.agencyList.map((value, index) => {\n      let editUrl = '/agency/' + value.id + '/update';\n      let agencyId = value.id;\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, value.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: editUrl,\n          state: {\n            agencyId: agencyId\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Edit\")));\n    }))));\n  }\n\n}\n\nexport default AgencyListComponent;","map":{"version":3,"sources":["/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/Agency/AgencyListComponent.js"],"names":["React","Component","urls","constants","ajaxGet","ajaxPost","Link","Button","AgencyListComponent","constructor","props","componentDidMount","agencyData","uri","API_URL","GET_AGENCY_LIST_URL","response","console","log","status","STATUS_ACTIVE","content","agencyArray","map","name","setState","agencyList","state","editHandler","v","edittedAgencyData","nickname","address1","address2","handleChange","e","bind","render","addAgencyUrl","RENDER_URL","AGENCY_URL","pathname","value","index","editUrl","id","agencyId"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport * as urls from \"../../Utils/Urls\";\nimport * as constants from '../../Utils/Constants';\nimport {ajaxGet} from \"../../Services/Http/Ajax\";\nimport {ajaxPost} from \"../../Services/Http/Ajax\";\nimport '../../App.css';\nimport {Link} from \"react-router-dom\";\nimport Button from \"react-bootstrap/esm/Button\";\n\nclass AgencyListComponent extends Component {\n\n    constructor(props){\n        super(props);\n        this.editHandler = this.editHandler.bind(this);\n        this.state = {\n            agencyList : []\n        }\n    }\n\n    componentDidMount = () => {\n        let agencyData;\n        let uri = urls.API_URL.GET_AGENCY_LIST_URL;\n        ajaxGet(uri, (response) => {\n            console.log(\"fgjh\",response);\n            if (response.status === constants.STATUS_ACTIVE) {\n                agencyData = response.content;\n\n                let agencyArray = agencyData.map(name => {return(name)\n                });\n                console.log(\"array:\",agencyArray);\n                this.setState({\n                    agencyList: agencyArray\n                });\n                console.log(\"hello\",this.state.agencyList)\n            }\n        })\n    };\n\n\n    editHandler = (v) => {\n        let edittedAgencyData = {\n            name : this.state.agencyList.name,\n            nickname : this.state.agencyList.nickname,\n            address1 : this.state.agencyList.address1,\n            address2 : this.state.agencyList.address2,\n        };\n        console.log(edittedAgencyData);\n    };\n\n    handleChange = (e) => {\n        let agencyData;\n        let uri = urls.API_URL.GET_AGENCY_LIST_URL;\n        ajaxPost(uri, (response) => {\n            if (response.status === constants.STATUS_ACTIVE) {\n                agencyData = response.content;\n                let agencyArray = agencyData.map(name => {return(name)\n                });\n                this.setState({\n                    agencyList: agencyArray\n                })\n            }\n        })\n    };\n\n    render(){\n        let addAgencyUrl = urls.RENDER_URL.AGENCY_URL;\n        return (\n            <div>\n                <div>\n                    <button>\n                        <Link to={{\n                        pathname: addAgencyUrl,\n                        }}>Create Agency\n                        </Link>\n                    </button>\n                </div>\n                <h1>AgencyList:</h1>\n                <table>\n                    <thead>\n                    <tr>\n                        <th>Agency</th>\n                        <th>Action</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.agencyList.map((value, index) => {\n                            let editUrl = '/agency/' + value.id + '/update';\n                            let agencyId = value.id;\n                            return (\n                                <tr key={index}>\n                                    <td>{value.name}</td>\n                                    <td>\n                                        <Link to={{\n                                            pathname: editUrl,\n                                            state: {\n                                                agencyId: agencyId\n                                            }\n                                        }}>Edit</Link>\n                                    </td>\n                                </tr>\n                            )\n                        }) }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default AgencyListComponent;"]},"metadata":{},"sourceType":"module"}