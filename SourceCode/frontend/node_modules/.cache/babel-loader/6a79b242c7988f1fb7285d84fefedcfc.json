{"ast":null,"code":"import _slicedToArray from \"/var/www/html/midOhio/fresh-trak/sourceCode/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/MenuPermission/MenuPermissionComponent.js\";\n\n/**\n * Created by Basil on 6/1/20.\n */\nimport React from 'react';\nimport '../../App.css';\nimport Utils from '../../Utils/Util';\nimport { STATUS_ACTIVE } from '../../Utils/Constants';\nimport { API_URL } from '../../Utils/Urls';\nimport { ajaxPost, ajaxPut } from '../../Services/Http/Ajax';\nimport Checkbox from \"../General/CheckBoxComponent\";\nimport { ToastContainer } from \"react-toastify\";\n\nconst MenuPermissionComponent = props => {\n  const _React$useState = React.useState(new Map()),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        checkedItems = _React$useState2[0],\n        setCheckedItems = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        menuFetched = _React$useState4[0],\n        setMenuFetched = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        subMenuArray = _React$useState6[0],\n        setSubMenuArray = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        isMainMenuActive = _React$useState8[0],\n        setIsMainMenuActive = _React$useState8[1];\n\n  const menuId = props.menuId,\n        roleId = props.roleId;\n\n  const usePrevious = value => {\n    const ref = React.useRef();\n    React.useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  };\n\n  const previousMenuId = usePrevious(menuId);\n  const previousRoleId = usePrevious(roleId);\n\n  const getMenuPermissionData = () => {\n    if (roleId && menuId) {\n      let data = {\n        roleId: roleId,\n        menuId: menuId\n      };\n      let uri = API_URL.MENU_PERMISSION_URL;\n      ajaxPost(uri, data, getMenuPermissionDataSuccess);\n    }\n  };\n\n  const getMenuPermissionDataSuccess = response => {\n    if (response.status === STATUS_ACTIVE) {\n      let menuData;\n      menuData = response.content;\n      let subMenuArray = menuData.map(subMenus => {\n        const item = subMenus.sub_menu_id;\n        const isChecked = subMenus.is_active === STATUS_ACTIVE; //setCheckedItems(prevState => ({ setCheckedItems: prevState.setCheckedItems.set(item, isChecked) }));\n\n        return {\n          subMenus\n        };\n      });\n      setSubMenuArray(subMenuArray);\n      setMenuFetched(true);\n      setIsMainMenuActive(subMenuArray[0].subMenus.is_active);\n    }\n  };\n\n  React.useEffect(() => {\n    if (previousMenuId !== menuId || previousRoleId.roleId !== roleId) {\n      getMenuPermissionData();\n    }\n  }, [menuId, roleId]);\n\n  const putMenuPermissionData = e => {\n    let data = {\n      data: {\n        menu_permission_id: e.target.getAttribute(\"dataid\"),\n        is_active: e.target.checked,\n        role_id: this.props.roleId,\n        sub_menu_id: e.target.id,\n        agency_id: this.props.agencyId\n      }\n    };\n    let uri = API_URL.MENU_PERMISSION_URL;\n    ajaxPut(uri, data, response => {\n      if (response.status === STATUS_ACTIVE) {\n        Utils.showMessage('success', response.message);\n      }\n    });\n  };\n\n  const makeSubMenuCheckBoxDisabled = e => {\n    setIsMainMenuActive(e.target.checked);\n  };\n\n  const handleChange = e => {\n    const item = parseInt(e.target.id);\n    const isChecked = e.target.checked;\n    setCheckedItems(prevState => ({\n      checkedItems: prevState.checkedItems.set(item, isChecked)\n    }));\n    putMenuPermissionData(e);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"menu-permission\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, menuFetched && React.createElement(\"div\", {\n    className: \"data-bind-role\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"btn text-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \" \", subMenuArray[0].subMenus.menu_name, \" \", React.createElement(\"input\", {\n    onChange: makeSubMenuCheckBoxDisabled,\n    checked: isMainMenuActive,\n    type: \"checkBox\",\n    name: \"menuPermission\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, subMenuArray.map((value, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sub-menu-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, value.subMenus.sub_menu_name, \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" \", React.createElement(Checkbox, {\n      name: `submenu-${value.subMenus.sub_menu_id}`,\n      dataid: value.subMenus.menu_permission_id,\n      id: value.subMenus.sub_menu_id,\n      checked: checkedItems.get(value.subMenus.sub_menu_id),\n      disabled: !isMainMenuActive,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))));\n  })))));\n};\n\nexport default MenuPermissionComponent;","map":{"version":3,"sources":["/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/MenuPermission/MenuPermissionComponent.js"],"names":["React","Utils","STATUS_ACTIVE","API_URL","ajaxPost","ajaxPut","Checkbox","ToastContainer","MenuPermissionComponent","props","useState","Map","checkedItems","setCheckedItems","menuFetched","setMenuFetched","subMenuArray","setSubMenuArray","isMainMenuActive","setIsMainMenuActive","menuId","roleId","usePrevious","value","ref","useRef","useEffect","current","previousMenuId","previousRoleId","getMenuPermissionData","data","uri","MENU_PERMISSION_URL","getMenuPermissionDataSuccess","response","status","menuData","content","map","subMenus","item","sub_menu_id","isChecked","is_active","putMenuPermissionData","e","menu_permission_id","target","getAttribute","checked","role_id","id","agency_id","agencyId","showMessage","message","makeSubMenuCheckBoxDisabled","handleChange","parseInt","prevState","set","menu_name","index","sub_menu_name","get"],"mappings":"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","sourcesContent":["/**\n * Created by Basil on 6/1/20.\n */\nimport React from 'react';\nimport '../../App.css';\nimport Utils from '../../Utils/Util';\nimport {STATUS_ACTIVE} from '../../Utils/Constants';\nimport {API_URL} from '../../Utils/Urls'\nimport {ajaxPost,ajaxPut} from '../../Services/Http/Ajax';\nimport Checkbox from \"../General/CheckBoxComponent\";\nimport {ToastContainer} from \"react-toastify\";\n\nconst MenuPermissionComponent = (props) => {\n\n    const [checkedItems, setCheckedItems] = React.useState(new Map());\n    const [menuFetched, setMenuFetched] = React.useState(false);\n    const [subMenuArray, setSubMenuArray] = React.useState([]);\n    const [isMainMenuActive, setIsMainMenuActive] = React.useState(false);\n    const {menuId, roleId } = props;\n\n    const usePrevious = (value) => {\n        const ref = React.useRef();\n        React.useEffect(() => {\n            ref.current = value;\n        });\n        return ref.current;\n    };\n    const previousMenuId = usePrevious(menuId);\n    const previousRoleId = usePrevious(roleId);\n    const getMenuPermissionData = () => {\n        if (roleId && menuId) {\n            let data = {\n                roleId: roleId,\n                menuId: menuId\n            };\n            let uri = API_URL.MENU_PERMISSION_URL;\n            ajaxPost(uri, data, getMenuPermissionDataSuccess)\n        }\n    };\n\n    const getMenuPermissionDataSuccess = (response) => {\n        if (response.status === STATUS_ACTIVE) {\n            let menuData;\n            menuData = response.content;\n            let subMenuArray = menuData.map(subMenus => {\n                const item = subMenus.sub_menu_id;\n                const isChecked = subMenus.is_active === STATUS_ACTIVE;\n                //setCheckedItems(prevState => ({ setCheckedItems: prevState.setCheckedItems.set(item, isChecked) }));\n                return {subMenus}\n            });\n            setSubMenuArray(subMenuArray);\n            setMenuFetched(true);\n            setIsMainMenuActive(subMenuArray[0].subMenus.is_active);\n        }\n    };\n\n    React.useEffect(() => {\n        if(previousMenuId !== menuId || previousRoleId.roleId !== roleId) {\n            getMenuPermissionData();\n        }\n    }, [menuId, roleId]);\n\n    const putMenuPermissionData = (e) => {\n        let data = {\n            data: {\n                menu_permission_id: e.target.getAttribute(\"dataid\"),\n                is_active: e.target.checked,\n                role_id: this.props.roleId,\n                sub_menu_id: e.target.id,\n                agency_id:this.props.agencyId\n            }\n        };\n        let uri = API_URL.MENU_PERMISSION_URL;\n        ajaxPut(uri, data, (response) => {\n            if (response.status === STATUS_ACTIVE) {\n                Utils.showMessage('success', response.message)\n            }\n        });\n    };\n\n    const makeSubMenuCheckBoxDisabled = (e) => {\n        setIsMainMenuActive(e.target.checked);\n    };\n\n    const handleChange = (e) => {\n        const item = parseInt(e.target.id);\n        const isChecked = e.target.checked;\n        setCheckedItems(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n        putMenuPermissionData(e);\n    };\n\n    return (\n        <div>\n            <ToastContainer/>\n            <div className=\"menu-permission\">\n                {\n                    menuFetched && (\n                        <div className=\"data-bind-role\">\n                            <span className=\"btn text-info\"> {subMenuArray[0].subMenus.menu_name} <input onChange={makeSubMenuCheckBoxDisabled} checked={isMainMenuActive} type=\"checkBox\" name=\"menuPermission\"/></span>\n                            <div>\n                                { subMenuArray.map( (value, index) => {\n                                    return <div key={index}>\n                                        <div className=\"sub-menu-container\">\n                                            <div>{value.subMenus.sub_menu_name} </div>\n                                            <div> <Checkbox name={`submenu-${value.subMenus.sub_menu_id}`} dataid={value.subMenus.menu_permission_id} id={value.subMenus.sub_menu_id} checked={checkedItems.get((value.subMenus.sub_menu_id))} disabled = {!isMainMenuActive} onChange={handleChange} /></div>\n                                        </div>\n                                    </div>\n                                })\n                                }\n                            </div>\n                        </div>\n                    )}\n            </div>\n        </div>\n    )\n};\n\nexport default MenuPermissionComponent;"]},"metadata":{},"sourceType":"module"}