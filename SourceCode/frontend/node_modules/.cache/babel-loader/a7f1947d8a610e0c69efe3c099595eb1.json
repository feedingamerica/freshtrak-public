{"ast":null,"code":"import Config from '../../Utils/Util';\nimport axios from 'axios';\nexport const ajaxGet = (url, successFn, Failfn, options) => {\n  axios.get(url, {\n    headers: {\n      \"Authorization\": \"Bearer \" + JSON.parse(Config.getItemLocalStorage('token'))\n    }\n  }).then(response => {\n    if (response) {\n      successFn(response.data);\n    } else {\n      Failfn(response.data);\n    }\n  }).catch(error => errorHandling(error));\n};\nexport const ajaxPost = (url, data, successFn, Failfn, options) => {\n  axios.post(url, data, {\n    headers: {\n      \"Authorization\": \"Bearer \" + JSON.parse(Config.getItemLocalStorage('token'))\n    }\n  }).then(response => {\n    if (response) {\n      successFn(response.data);\n    } else {\n      Failfn(response.data);\n    }\n  }).catch(error => errorHandling(error));\n};\nexport const ajaxPut = (url, data, successFn, Failfn, options) => {\n  axios.put(url, data, {\n    headers: {\n      \"Authorization\": \"Bearer \" + JSON.parse(Config.getItemLocalStorage('token'))\n    }\n  }).then(response => {\n    if (response) {\n      successFn(response.data);\n    } else {\n      Failfn(response.data);\n    }\n  }).catch(error => errorHandling(error));\n};\nexport const ajaxDestroy = (url, successFn, Failfn, options) => {\n  axios.delete(url, {\n    headers: {\n      \"Authorization\": \"Bearer \" + JSON.parse(Config.getItemLocalStorage('token'))\n    }\n  }).then(response => {\n    if (response) {\n      successFn(response.data);\n    } else {\n      Failfn(response.data);\n    }\n  }).catch(error => errorHandling(error));\n};\n\nconst errorHandling = error => {\n  if (error.response.status === 403 || error.response.status === 500) {\n    Config.showMessage('error', error.response.showMessage);\n  } else if (error.response.status === 400 || error.response.status === 501) {\n    Config.showMessage('warning', error.response.data.message);\n  } else if (error.response.status === 409 || error.response.status === 422 || error.response.status === 404) {\n    Config.showMessage('error', error.response.data.message);\n  } else if (error.response.status === 401) {} else {\n    Config.showMessage('error', 'Some network error occurred');\n  }\n};","map":{"version":3,"sources":["/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Services/Http/Ajax.js"],"names":["Config","axios","ajaxGet","url","successFn","Failfn","options","get","headers","JSON","parse","getItemLocalStorage","then","response","data","catch","error","errorHandling","ajaxPost","post","ajaxPut","put","ajaxDestroy","delete","status","showMessage","message"],"mappings":"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","sourcesContent":["import Config from '../../Utils/Util';\nimport axios from 'axios';\n\n    export const ajaxGet = (url, successFn, Failfn, options) =>  {\n        axios.get(url, {\n            headers: { \"Authorization\": \"Bearer \" + JSON.parse(Config.getItemLocalStorage('token')) }\n        }).then((response) => {\n            if (response) {\n                successFn(response.data);\n            } else {\n                Failfn(response.data)\n            }\n        }).catch(error => errorHandling(error));\n    };\n\n    export const ajaxPost = (url, data, successFn, Failfn, options) => {\n        axios.post(url, data, {\n            headers: { \"Authorization\": \"Bearer \" + JSON.parse(Config.getItemLocalStorage('token')) }\n        }).then((response) => {\n            if (response) {\n                successFn(response.data);\n            } else {\n                Failfn(response.data);\n            }\n        }).catch(error => errorHandling(error));\n    };\n\n    export const ajaxPut = (url, data, successFn, Failfn, options) => {\n        axios.put(url, data, {\n            headers: { \"Authorization\": \"Bearer \" + JSON.parse(Config.getItemLocalStorage('token')) }\n        }).then((response) => {\n            if (response) {\n                successFn(response.data);\n            } else {\n                Failfn(response.data)\n            }\n        }).catch(error => errorHandling(error));\n    };\n\n    export const ajaxDestroy = (url, successFn, Failfn, options) => {\n        axios.delete(url, {\n            headers: { \"Authorization\": \"Bearer \" + JSON.parse(Config.getItemLocalStorage('token')) }\n        }).then((response) => {\n            if (response) {\n                successFn(response.data);\n            } else {\n                Failfn(response.data)\n            }\n        }).catch(error => errorHandling(error));\n    };\n\n    const errorHandling = (error) => {\n         if (error.response.status === 403 || error.response.status === 500) {\n            Config.showMessage('error', error.response.showMessage);\n        } else if (error.response.status === 400 || error.response.status === 501) {\n            Config.showMessage('warning', error.response.data.message);\n        } else if (error.response.status === 409 || error.response.status === 422 || error.response.status === 404) {\n            Config.showMessage('error', error.response.data.message);\n        } else if (error.response.status === 401) {\n\n        } else {\n            Config.showMessage('error', 'Some network error occurred');\n         }\n    };"]},"metadata":{},"sourceType":"module"}