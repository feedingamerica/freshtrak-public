{"ast":null,"code":"var _jsxFileName = \"/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/Login/LoginComponent.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Utils from '../../Utils/Util';\nimport { validateEmail, validatePassword } from '../../Utils/Validation';\nimport { ajaxPost } from '../../Services/Http/Ajax';\nimport * as constants from '../../Utils/Constants';\nimport { ToastContainer } from 'react-toastify';\nlet isEmailValid = false;\nlet isPasswordValid = false;\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      let errors = this.state.errors;\n      this.setState({\n        errors,\n        [name]: value\n      }, () => {\n        switch (name) {\n          case 'email':\n            errors.email = validateEmail(this.state.email) ? isEmailValid = true : 'Email is not valid!';\n            break;\n\n          case 'password':\n            errors.password = validatePassword(this.state.password) ? isPasswordValid = true : 'password must contain A ';\n            break;\n\n          default:\n            break;\n        }\n\n        this.setState({\n          errors\n        });\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let loginDetails = {\n        email: this.state.email,\n        password: this.state.password\n      };\n\n      if (isEmailValid && isPasswordValid) {\n        let uri = constants.BASE_URL + '/api/login';\n        ajaxPost(uri, loginDetails, response => {\n          if (response.status === constants.STATUS_ACTIVE) {\n            Utils.setItemToLocalStorage('menu_permission', response.content.menu_permission);\n            Utils.setItemToLocalStorage('token', response.content.token.token);\n            this.setState({\n              isLoginSuccess: true\n            });\n          }\n        });\n      } else {\n        Utils.showMessage('error', 'Please enter the credentials');\n      }\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      isLoginSuccess: false,\n      validPassword: false,\n      errors: {\n        email: '',\n        password: ''\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    const isLoginSuccess = this.state.isLoginSuccess;\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, isLoginSuccess && React.createElement(Redirect, {\n      to: '/dashboard',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CommentBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Email: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      onBlur: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"validationError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, errors.email)))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" Password: \"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onBlur: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"validationError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, errors.password)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/Login/LoginComponent.js"],"names":["React","Component","Redirect","Utils","validateEmail","validatePassword","ajaxPost","constants","ToastContainer","isEmailValid","isPasswordValid","LoginComponent","constructor","props","handleChange","event","preventDefault","target","name","value","errors","state","setState","email","password","handleSubmit","e","loginDetails","uri","BASE_URL","response","status","STATUS_ACTIVE","setItemToLocalStorage","content","menu_permission","token","isLoginSuccess","showMessage","validPassword","bind","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Utils from '../../Utils/Util';\nimport {validateEmail, validatePassword} from '../../Utils/Validation';\nimport {ajaxPost} from '../../Services/Http/Ajax';\nimport * as constants from '../../Utils/Constants'\nimport {ToastContainer} from 'react-toastify';\nlet isEmailValid = false; let isPasswordValid = false;\n\nclass LoginComponent extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: null,\n            password: null,\n            isLoginSuccess: false,\n            validPassword : false,\n            errors: {\n                email: '',\n                password: '',\n            }\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const {name, value} = event.target;\n        let errors = this.state.errors;\n        this.setState({errors, [name] : value}, () => {\n            switch (name) {\n                case 'email':\n                    errors.email =\n                        validateEmail(this.state.email)\n                            ? isEmailValid = true\n                            : 'Email is not valid!';\n                    break;\n                case 'password':\n                    errors.password =\n                        validatePassword(this.state.password)\n                            ? isPasswordValid = true\n                            : 'password must contain A ';\n                    break;\n                default:\n                    break;\n            }\n            this.setState({errors});\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let loginDetails = {\n            email: this.state.email,\n            password: this.state.password,\n        };\n        if(isEmailValid && isPasswordValid) {\n            let uri = constants.BASE_URL + '/api/login';\n            ajaxPost(uri, loginDetails, (response) => {\n                if (response.status === constants.STATUS_ACTIVE) {\n                    Utils.setItemToLocalStorage('menu_permission', response.content.menu_permission);\n                    Utils.setItemToLocalStorage('token', response.content.token.token);\n                    this.setState({isLoginSuccess: true})\n                }\n            });\n        } else {\n            Utils.showMessage('error', 'Please enter the credentials')\n        }\n    };\n\n    render() {\n        const { isLoginSuccess } = this.state;\n        const { errors } = this.state;\n        return (\n            <div>\n                {isLoginSuccess && (<Redirect to={'/dashboard'}/>)}\n                <ToastContainer/>\n                <h3>Login</h3>\n\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <div className=\"CommentBox\">\n                                <label className=\"label-login\">Email: </label>\n                                <input type=\"text\" name='email'  onBlur={this.handleChange} />\n                                {<span className='validationError'>{errors.email}</span>}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <label className=\"label-login\"> Password: </label>\n                                <input type=\"password\" name=\"password\"  onBlur={this.handleChange} />\n                                {<span className='validationError'>{errors.password}</span>}\n                            </div>\n                        </div>\n                    </div><br />\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary\">Login</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nexport default LoginComponent;"]},"metadata":{},"sourceType":"module"}