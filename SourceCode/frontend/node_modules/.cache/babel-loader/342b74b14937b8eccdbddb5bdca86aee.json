{"ast":null,"code":"var _jsxFileName = \"/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/MenuPermission/MenuPermissionComponent.js\";\n\n/**\n * Created by Basil on 6/1/20.\n */\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport * as constants from '../../Utils/Constants';\nimport { ajaxPost, ajaxPut } from '../../Services/Http/Ajax';\nimport Checkbox from \"../General/CheckBoxComponent\";\n\nclass MenuPermissionComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidUpdate = prevProps => {\n      this.getMenuPermissionData(prevProps);\n    };\n\n    this.getMenuPermissionData = prevProps => {\n      if (prevProps.menuId !== this.props.menuId || prevProps.roleId !== this.props.roleId) {\n        let menuData;\n        let roleId = this.props.roleId;\n        let mainMenuId = this.props.menuId;\n\n        if (roleId && mainMenuId) {\n          let data = {\n            roleId: roleId,\n            menuId: mainMenuId\n          };\n          let uri = constants.BASE_URL + '/api/menu/permission';\n          ajaxPost(uri, data, response => {\n            if (response.status === constants.STATUS_ACTIVE) {\n              menuData = response.content;\n              let subMenuArray = menuData.map(subMenus => {\n                const item = subMenus.subMenuId;\n                const isChecked = subMenus.is_active === 1;\n                this.setState(prevState => ({\n                  checkedItems: prevState.checkedItems.set(item, isChecked)\n                }));\n                return {\n                  subMenus\n                };\n              });\n              this.setState({\n                subMenuArray: subMenuArray,\n                menuFetched: true,\n                isMainMenuActive: subMenuArray[0].subMenus.is_active\n              });\n            }\n          });\n        }\n      }\n    };\n\n    this.putMenuPermmissionData = e => {\n      let putData = {\n        data: {\n          sub_menu_id: e.target.id,\n          is_active: e.target.checked\n        }\n      };\n      let uri = constants.BASE_URL + '/api/menu/permission';\n      ajaxPut(uri, putData, response => {\n        if (response.status === constants.STATUS_ACTIVE) {\n          /*menuData = response.content;\n          let subMenuArray = menuData.map(subMenus => {\n              const item = subMenus.subMenuId;\n              const isChecked = subMenus.is_active === 1;\n              this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }))\n              return {subMenus}\n          });*/\n\n          /*this.setState({\n              subMenuArray: subMenuArray,\n              menuFetched: true,\n              isMainMenuActive: subMenuArray[0].subMenus.is_active\n          });*/\n          console.log(\"basdil\");\n        }\n      });\n      console.log(putData);\n      console.log(\"basil\", e.target.id, '>>>', e.target.name);\n    };\n\n    this.makeSubMenuCheckBoxDisabled = e => {\n      this.setState({\n        isMainMenuActive: e.target.checked\n      });\n    };\n\n    this.state = {\n      checkedItems: new Map(),\n      menuFetched: false,\n      subMenuArray: [],\n      isMainMenuActive: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const item = parseInt(e.target.id);\n    const isChecked = e.target.checked;\n    this.setState(prevState => ({\n      checkedItems: prevState.checkedItems.set(item, isChecked)\n    }));\n    this.putMenuPermmissionData(e);\n  }\n\n  render() {\n    const menuFetched = this.state.menuFetched;\n    const menuDetails = this.state.subMenuArray;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"MenuComponent\", React.createElement(\"div\", {\n      className: \"menu-permission\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, menuFetched && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" \", menuDetails[0].subMenus.menu_name, \" \", React.createElement(\"input\", {\n      onChange: this.makeSubMenuCheckBoxDisabled,\n      checked: this.state.isMainMenuActive,\n      type: \"checkBox\",\n      name: \"menuPermission\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), menuDetails.map((value, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, value.subMenus.sub_menu_name, \" \", React.createElement(Checkbox, {\n        name: `submenu-${value.subMenus.subMenuId}`,\n        \"data-mpId\": value.subMenus.menuPermissionId,\n        id: value.subMenus.subMenuId,\n        checked: this.state.checkedItems.get(value.subMenus.subMenuId),\n        disabled: !this.state.isMainMenuActive,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    }))));\n  }\n\n}\n\nexport default MenuPermissionComponent;","map":{"version":3,"sources":["/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/MenuPermission/MenuPermissionComponent.js"],"names":["React","Component","constants","ajaxPost","ajaxPut","Checkbox","MenuPermissionComponent","constructor","props","componentDidUpdate","prevProps","getMenuPermissionData","menuId","roleId","menuData","mainMenuId","data","uri","BASE_URL","response","status","STATUS_ACTIVE","content","subMenuArray","map","subMenus","item","subMenuId","isChecked","is_active","setState","prevState","checkedItems","set","menuFetched","isMainMenuActive","putMenuPermmissionData","e","putData","sub_menu_id","target","id","checked","console","log","name","makeSubMenuCheckBoxDisabled","state","Map","handleChange","bind","parseInt","render","menuDetails","menu_name","value","index","sub_menu_name","menuPermissionId","get"],"mappings":"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","sourcesContent":["/**\n * Created by Basil on 6/1/20.\n */\nimport React, {Component} from 'react';\nimport '../../App.css';\nimport * as constants from '../../Utils/Constants';\nimport {ajaxPost,ajaxPut} from '../../Services/Http/Ajax';\nimport Checkbox from \"../General/CheckBoxComponent\";\nclass MenuPermissionComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            checkedItems: new Map(),\n            menuFetched: false,\n            subMenuArray: [],\n            isMainMenuActive: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidUpdate = (prevProps) => {\n       this.getMenuPermissionData(prevProps);\n    };\n    getMenuPermissionData = (prevProps)=>{\n        if((prevProps.menuId !== this.props.menuId) || prevProps.roleId !== this.props.roleId) {\n            let menuData;\n            let roleId = this.props.roleId;\n            let mainMenuId = this.props.menuId;\n            if (roleId && mainMenuId) {\n                let data = {\n                    roleId: roleId,\n                    menuId: mainMenuId\n                };\n                let uri = constants.BASE_URL + '/api/menu/permission';\n                ajaxPost(uri, data, (response) => {\n                    if (response.status === constants.STATUS_ACTIVE) {\n                        menuData = response.content;\n                        let subMenuArray = menuData.map(subMenus => {\n                            const item = subMenus.subMenuId;\n                            const isChecked = subMenus.is_active === 1;\n                            this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }))\n                            return {subMenus}\n                        });\n                        this.setState({\n                            subMenuArray: subMenuArray,\n                            menuFetched: true,\n                            isMainMenuActive: subMenuArray[0].subMenus.is_active\n                        });\n                    }\n                })\n            }\n        }\n    }\n    putMenuPermmissionData = (e)=>{\n        let putData = {\n            data: {\n                sub_menu_id: e.target.id,\n                is_active: e.target.checked\n            }\n        };\n        let uri = constants.BASE_URL + '/api/menu/permission';\n        ajaxPut(uri, putData, (response) => {\n            if (response.status === constants.STATUS_ACTIVE) {\n                /*menuData = response.content;\n                let subMenuArray = menuData.map(subMenus => {\n                    const item = subMenus.subMenuId;\n                    const isChecked = subMenus.is_active === 1;\n                    this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }))\n                    return {subMenus}\n                });*/\n                /*this.setState({\n                    subMenuArray: subMenuArray,\n                    menuFetched: true,\n                    isMainMenuActive: subMenuArray[0].subMenus.is_active\n                });*/\n                console.log(\"basdil\");\n            }\n        })\n        console.log(putData);\n        console.log(\"basil\",e.target.id,'>>>',e.target.name);\n    }\n\n    makeSubMenuCheckBoxDisabled = (e) => {\n        this.setState({\n            isMainMenuActive: e.target.checked\n        });\n    };\n    handleChange(e) {\n        const item = parseInt(e.target.id);\n        const isChecked = e.target.checked;\n        this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n        this.putMenuPermmissionData(e);\n    }\n    render() {\n        const { menuFetched } = this.state;\n        const menuDetails = this.state.subMenuArray;\n        return (\n            <div>MenuComponent\n                <div className=\"menu-permission\">\n                    {\n                        menuFetched && (\n                        <div> <b> {menuDetails[0].subMenus.menu_name} <input onChange={this.makeSubMenuCheckBoxDisabled} checked={this.state.isMainMenuActive} type=\"checkBox\" name=\"menuPermission\"/></b>\n                            { menuDetails.map( (value, index) => {\n                                return <div key={index}>{value.subMenus.sub_menu_name} <Checkbox name={`submenu-${value.subMenus.subMenuId}`} data-mpId={value.subMenus.menuPermissionId} id={value.subMenus.subMenuId} checked={this.state.checkedItems.get((value.subMenus.subMenuId))} disabled = {!this.state.isMainMenuActive} onChange={this.handleChange} /></div>\n                            })  }\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\nexport default MenuPermissionComponent;"]},"metadata":{},"sourceType":"module"}