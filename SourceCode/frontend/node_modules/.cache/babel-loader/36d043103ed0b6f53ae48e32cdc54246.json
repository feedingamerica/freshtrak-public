{"ast":null,"code":"var _jsxFileName = \"/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/MenuPermission/MenuPermissionComponent.js\";\n\n/**\n * Created by Basil on 6/1/20.\n */\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport Utils from '../../Utils/Util';\nimport * as constants from '../../Utils/Constants';\nimport * as urls from '../../Utils/Urls';\nimport { ajaxPost, ajaxPut } from '../../Services/Http/Ajax';\nimport Checkbox from \"../General/CheckBoxComponent\";\nimport { ToastContainer } from \"react-toastify\";\n\nclass MenuPermissionComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidUpdate = prevProps => {\n      this.getMenuPermissionData(prevProps);\n    };\n\n    this.getMenuPermissionData = prevProps => {\n      if (prevProps.menuId !== this.props.menuId || prevProps.roleId !== this.props.roleId || prevProps.agencyId !== this.props.agencyId) {\n        let roleId = this.props.roleId;\n        let mainMenuId = this.props.menuId;\n        let agencyId = this.props.agencyId;\n\n        if (roleId && mainMenuId) {\n          let postData = {\n            data: {\n              roleId: roleId,\n              menuId: mainMenuId,\n              agencyId: agencyId\n            }\n          };\n          let uri = urls.API_URL.MENU_PERMISSION_URL;\n          ajaxPost(uri, postData, this.getMenuPermissionDataSuccess);\n        }\n      }\n    };\n\n    this.getMenuPermissionDataSuccess = response => {\n      if (response.status === constants.STATUS_ACTIVE) {\n        let menuData;\n        menuData = response.content;\n        let subMenuArray = menuData.map(subMenus => {\n          const item = subMenus.sub_menu_id;\n          const isChecked = subMenus.is_active === constants.STATUS_ACTIVE;\n          this.setState(prevState => ({\n            checkedItems: prevState.checkedItems.set(item, isChecked)\n          }));\n          return {\n            subMenus\n          };\n        });\n        this.setState({\n          subMenuArray: subMenuArray,\n          menuFetched: true,\n          isMainMenuActive: subMenuArray[0].subMenus.is_active\n        });\n      }\n    };\n\n    this.putMenuPermissionData = e => {\n      let data = {\n        data: {\n          menu_permission_id: e.target.getAttribute(\"dataid\"),\n          is_active: e.target.checked,\n          role_id: this.props.roleId,\n          sub_menu_id: e.target.id,\n          agency_id: this.props.agencyId\n        }\n      };\n      let uri = urls.API_URL.MENU_PERMISSION_URL;\n      ajaxPut(uri, data, response => {\n        if (response.status === constants.STATUS_ACTIVE) {\n          Utils.showMessage('success', response.message);\n        }\n      });\n    };\n\n    this.makeSubMenuCheckBoxDisabled = e => {\n      this.setState({\n        isMainMenuActive: e.target.checked\n      });\n    };\n\n    this.state = {\n      checkedItems: new Map(),\n      menuFetched: false,\n      subMenuArray: [],\n      isMainMenuActive: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const item = parseInt(e.target.id);\n    const isChecked = e.target.checked;\n    this.setState(prevState => ({\n      checkedItems: prevState.checkedItems.set(item, isChecked)\n    }));\n    this.putMenuPermissionData(e);\n  }\n\n  render() {\n    const menuFetched = this.state.menuFetched;\n    const menuDetails = this.state.subMenuArray;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"menu-permission\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, menuFetched && React.createElement(\"div\", {\n      className: \"data-bind-role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"btn text-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" \", menuDetails[0].subMenus.menu_name, \" \", React.createElement(\"input\", {\n      onChange: this.makeSubMenuCheckBoxDisabled,\n      checked: this.state.isMainMenuActive,\n      type: \"checkBox\",\n      name: \"menuPermission\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, menuDetails.map((value, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sub-menu-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, value.subMenus.sub_menu_name, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \" \", React.createElement(Checkbox, {\n        name: `submenu-${value.subMenus.sub_menu_id}`,\n        dataid: value.subMenus.menu_permission_id,\n        id: value.subMenus.sub_menu_id,\n        checked: this.state.checkedItems.get(value.subMenus.sub_menu_id),\n        disabled: !this.state.isMainMenuActive,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }))));\n    })))));\n  }\n\n}\n\nexport default MenuPermissionComponent;","map":{"version":3,"sources":["/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/MenuPermission/MenuPermissionComponent.js"],"names":["React","Component","Utils","constants","urls","ajaxPost","ajaxPut","Checkbox","ToastContainer","MenuPermissionComponent","constructor","props","componentDidUpdate","prevProps","getMenuPermissionData","menuId","roleId","agencyId","mainMenuId","postData","data","uri","API_URL","MENU_PERMISSION_URL","getMenuPermissionDataSuccess","response","status","STATUS_ACTIVE","menuData","content","subMenuArray","map","subMenus","item","sub_menu_id","isChecked","is_active","setState","prevState","checkedItems","set","menuFetched","isMainMenuActive","putMenuPermissionData","e","menu_permission_id","target","getAttribute","checked","role_id","id","agency_id","showMessage","message","makeSubMenuCheckBoxDisabled","state","Map","handleChange","bind","parseInt","render","menuDetails","menu_name","value","index","sub_menu_name","get"],"mappings":"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","sourcesContent":["/**\n * Created by Basil on 6/1/20.\n */\nimport React, {Component} from 'react';\nimport '../../App.css';\nimport Utils from '../../Utils/Util';\nimport * as constants from '../../Utils/Constants';\nimport * as urls from '../../Utils/Urls'\nimport {ajaxPost,ajaxPut} from '../../Services/Http/Ajax';\nimport Checkbox from \"../General/CheckBoxComponent\";\nimport {ToastContainer} from \"react-toastify\";\nclass MenuPermissionComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            checkedItems: new Map(),\n            menuFetched: false,\n            subMenuArray: [],\n            isMainMenuActive: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidUpdate = (prevProps) => {\n       this.getMenuPermissionData(prevProps);\n    };\n\n    getMenuPermissionData = (prevProps) => {\n        if((prevProps.menuId !== this.props.menuId) || prevProps.roleId !== this.props.roleId || prevProps.agencyId !== this.props.agencyId) {\n            let roleId = this.props.roleId;\n            let mainMenuId = this.props.menuId;\n            let agencyId = this.props.agencyId;\n            if (roleId && mainMenuId) {\n                let postData = {\n                    data: {\n                        roleId: roleId,\n                        menuId: mainMenuId,\n                        agencyId: agencyId\n                    }\n                };\n                let uri = urls.API_URL.MENU_PERMISSION_URL;\n                ajaxPost(uri, postData, this.getMenuPermissionDataSuccess)\n            }\n        }\n    };\n\n    getMenuPermissionDataSuccess = (response) => {\n        if (response.status === constants.STATUS_ACTIVE) {\n            let menuData;\n            menuData = response.content;\n            let subMenuArray = menuData.map(subMenus => {\n                const item = subMenus.sub_menu_id;\n                const isChecked = subMenus.is_active === constants.STATUS_ACTIVE;\n                this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }))\n                return {subMenus}\n            });\n            this.setState({\n                subMenuArray: subMenuArray,\n                menuFetched: true,\n                isMainMenuActive: subMenuArray[0].subMenus.is_active\n            });\n        }\n    };\n\n    putMenuPermissionData = (e) => {\n        let data = {\n            data: {\n                menu_permission_id: e.target.getAttribute(\"dataid\"),\n                is_active: e.target.checked,\n                role_id: this.props.roleId,\n                sub_menu_id: e.target.id,\n                agency_id:this.props.agencyId\n            }\n        };\n        let uri = urls.API_URL.MENU_PERMISSION_URL;\n        ajaxPut(uri, data, (response) => {\n            if (response.status === constants.STATUS_ACTIVE) {\n                Utils.showMessage('success', response.message)\n            }\n        });\n    };\n\n    makeSubMenuCheckBoxDisabled = (e) => {\n        this.setState({\n            isMainMenuActive: e.target.checked\n        });\n    };\n\n    handleChange(e) {\n        const item = parseInt(e.target.id);\n        const isChecked = e.target.checked;\n        this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n        this.putMenuPermissionData(e);\n    };\n\n    render() {\n        const { menuFetched } = this.state;\n        const menuDetails = this.state.subMenuArray;\n        return (\n            <div>\n                <ToastContainer/>\n                <div className=\"menu-permission\">\n                    {\n                        menuFetched && (\n                        <div className=\"data-bind-role\">\n                            <span className=\"btn text-info\"> {menuDetails[0].subMenus.menu_name} <input onChange={this.makeSubMenuCheckBoxDisabled} checked={this.state.isMainMenuActive} type=\"checkBox\" name=\"menuPermission\"/></span>\n                            <div>\n                                { menuDetails.map( (value, index) => {\n                                    return <div key={index}>\n                                                <div className=\"sub-menu-container\">\n                                                    <div>{value.subMenus.sub_menu_name} </div>\n                                                    <div> <Checkbox name={`submenu-${value.subMenus.sub_menu_id}`} dataid={value.subMenus.menu_permission_id} id={value.subMenus.sub_menu_id} checked={this.state.checkedItems.get((value.subMenus.sub_menu_id))} disabled = {!this.state.isMainMenuActive} onChange={this.handleChange} /></div>\n                                                </div>\n                                            </div>\n                                    })\n                                }\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\nexport default MenuPermissionComponent;"]},"metadata":{},"sourceType":"module"}