{"ast":null,"code":"import { getItemLocalStorage, showMessage } from '../../Utils/Util';\nimport { STATUS_CODES } from '../../Utils/Constants';\nimport axios from 'axios';\nexport const ajaxGet = (url, successFn, Failfn, options) => {\n  axios.get(url, {\n    headers: {\n      \"Authorization\": \"Bearer \" + JSON.parse(getItemLocalStorage('token'))\n    }\n  }).then(response => {\n    if (response) {\n      successFn(response.data);\n    } else {\n      Failfn(response.data);\n    }\n  }).catch(error => errorHandling(error));\n};\nexport const ajaxPost = (url, data, successFn, Failfn, options) => {\n  axios.post(url, data, {\n    headers: {\n      \"Authorization\": \"Bearer \" + JSON.parse(getItemLocalStorage('token'))\n    }\n  }).then(response => {\n    if (response) {\n      successFn(response.data);\n    } else {\n      Failfn(response.data);\n    }\n  }).catch(error => errorHandling(error));\n};\nexport const ajaxPut = (url, data, successFn, Failfn, options) => {\n  axios.put(url, data, {\n    headers: {\n      \"Authorization\": \"Bearer \" + JSON.parse(getItemLocalStorage('token'))\n    }\n  }).then(response => {\n    if (response) {\n      successFn(response.data);\n    } else {\n      Failfn(response.data);\n    }\n  }).catch(error => errorHandling(error));\n};\nexport const ajaxDestroy = (url, successFn, Failfn, options) => {\n  axios.delete(url, {\n    headers: {\n      \"Authorization\": \"Bearer \" + JSON.parse(getItemLocalStorage('token'))\n    }\n  }).then(response => {\n    if (response) {\n      successFn(response.data);\n    } else {\n      Failfn(response.data);\n    }\n  }).catch(error => errorHandling(error));\n};\n\nconst errorHandling = error => {\n  if (error.response.status === STATUS_CODES.HTTP_403 || error.response.status === STATUS_CODES.HTTP_500) {\n    showMessage('error', error.response.showMessage);\n  } else if (error.response.status === STATUS_CODES.HTTP_400 || error.response.status === STATUS_CODES.HTTP_501) {\n    showMessage('warning', error.response.data.message);\n  } else if (error.response.status === STATUS_CODES.HTTP_409 || error.response.status === STATUS_CODES.HTTP_422 || error.response.status === STATUS_CODES.HTTP_404) {\n    showMessage('error', error.response.data.message);\n  } else if (error.response.status === STATUS_CODES.HTTP_401) {} else {\n    showMessage('error', 'Some network error occurred');\n  }\n};","map":{"version":3,"sources":["/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Services/Http/Ajax.js"],"names":["getItemLocalStorage","showMessage","STATUS_CODES","axios","ajaxGet","url","successFn","Failfn","options","get","headers","JSON","parse","then","response","data","catch","error","errorHandling","ajaxPost","post","ajaxPut","put","ajaxDestroy","delete","status","HTTP_403","HTTP_500","HTTP_400","HTTP_501","message","HTTP_409","HTTP_422","HTTP_404","HTTP_401"],"mappings":"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","sourcesContent":["import {getItemLocalStorage, showMessage} from '../../Utils/Util';\nimport {STATUS_CODES} from '../../Utils/Constants';\nimport axios from 'axios';\n\n    export const ajaxGet = (url, successFn, Failfn, options) =>  {\n        axios.get(url, {\n            headers: { \"Authorization\": \"Bearer \" + JSON.parse(getItemLocalStorage('token')) }\n        }).then((response) => {\n            if (response) {\n                successFn(response.data);\n            } else {\n                Failfn(response.data)\n            }\n        }).catch(error => errorHandling(error));\n    };\n\n    export const ajaxPost = (url, data, successFn, Failfn, options) => {\n        axios.post(url, data, {\n            headers: { \"Authorization\": \"Bearer \" + JSON.parse(getItemLocalStorage('token')) }\n        }).then((response) => {\n            if (response) {\n                successFn(response.data);\n            } else {\n                Failfn(response.data);\n            }\n        }).catch(error => errorHandling(error));\n    };\n\n    export const ajaxPut = (url, data, successFn, Failfn, options) => {\n        axios.put(url, data, {\n            headers: { \"Authorization\": \"Bearer \" + JSON.parse(getItemLocalStorage('token')) }\n        }).then((response) => {\n            if (response) {\n                successFn(response.data);\n            } else {\n                Failfn(response.data)\n            }\n        }).catch(error => errorHandling(error));\n    };\n\n    export const ajaxDestroy = (url, successFn, Failfn, options) => {\n        axios.delete(url, {\n            headers: { \"Authorization\": \"Bearer \" + JSON.parse(getItemLocalStorage('token')) }\n        }).then((response) => {\n            if (response) {\n                successFn(response.data);\n            } else {\n                Failfn(response.data)\n            }\n        }).catch(error => errorHandling(error));\n    };\n\n    const errorHandling = (error) => {\n         if (error.response.status === STATUS_CODES.HTTP_403 || error.response.status === STATUS_CODES.HTTP_500) {\n            showMessage('error', error.response.showMessage);\n        } else if (error.response.status === STATUS_CODES.HTTP_400 || error.response.status === STATUS_CODES.HTTP_501) {\n            showMessage('warning', error.response.data.message);\n        } else if (error.response.status === STATUS_CODES.HTTP_409 || error.response.status === STATUS_CODES.HTTP_422 || error.response.status === STATUS_CODES.HTTP_404) {\n            showMessage('error', error.response.data.message);\n        } else if (error.response.status === STATUS_CODES.HTTP_401) {\n\n        } else {\n            showMessage('error', 'Some network error occurred');\n         }\n    };"]},"metadata":{},"sourceType":"module"}