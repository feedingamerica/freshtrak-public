{"ast":null,"code":"import _slicedToArray from \"/var/www/html/midOhio/fresh-trak/sourceCode/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/General/AgencySelectionComponent.js\";\n\n/**\n * Created by Basil on 03/02/2020.\n */\nimport React, { Component } from 'react';\nimport { ajaxGet } from '../../Services/Http/Ajax';\nimport * as constants from '../../Utils/Constants';\nimport * as urls from '../../Utils/Urls';\nimport '../../App.css';\n\nconst AgencySelectionComponent = props => {\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        agencyValue = _React$useState2[0],\n        setAgencyValue = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedAgency = _React$useState4[0],\n        setSelectedAgency = _React$useState4[1];\n\n  const handleChangeInAgency = event => {\n    setSelectedAgency(event.target.value);\n    props.onSelectedAgency(event.target.value);\n  };\n\n  React.useEffect(() => {\n    let agencyData;\n    let uri = urls.API_URL.GET_AGENCY_LIST_URL;\n    ajaxGet(uri, response => {\n      if (response.status === STATUS_ACTIVE) {\n        agencyData = response.content;\n        let agencyArray = agencyData.map(agency => {\n          return {\n            agency\n          };\n        });\n        setAgencyValue(agencyArray);\n      }\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"agency-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Agency: \"), React.createElement(\"select\", {\n    className: \"dropdown-toggle btn btn-secondary\",\n    onChange: handleChangeInAgency,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    className: \"dropdown-item\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Select Options\"), agencyValue.map((value, index) => {\n    return React.createElement(\"option\", {\n      className: \"dropdown-item\",\n      value: value.agency.id,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, value.agency.role_name);\n  })));\n};\n/*class AgencySelectionComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            agencyValue: [],\n            selectedAgency: null\n        };\n        this.handleChangeInAgency = this.handleChangeInAgency.bind(this);\n    };\n\n    componentDidMount = () => {\n        let agencyData;\n        let uri = urls.API_URL.GET_AGENCY_LIST_URL;\n        console.log(uri);\n        ajaxGet(uri, (response) => {\n            if (response.status === constants.STATUS_ACTIVE) {\n                agencyData = response.content;\n                let agencyArray = agencyData.map(agency => {\n                    return {agency}\n                });\n                this.setState({\n                    agencyValue: agencyArray,\n                });\n            }\n        });\n    };\n\n    handleChangeInAgency = (e) => {\n        this.setState({\n            selectedAgency: e.target.value\n        });\n        this.props.onSelectedAgency(e.target.value);\n    };\n\n    render() {\n        return (\n            <div className=\"agency-data\">\n                <span className=\"btn\">Agency: </span>\n                <select className=\"dropdown-toggle btn btn-secondary\" onChange={this.handleChangeInAgency}>\n                    <option className=\"dropdown-item\" value=\"\">Select Options</option>\n                    {this.state.agencyValue.map( (value, index) => {\n                        return <option className=\"dropdown-item\" value={value.agency.id} key={index}>{value.agency.role_name}</option>\n                    })  }\n                </select>\n            </div>\n        )\n    }\n}*/\n\n\nexport default AgencySelectionComponent;","map":{"version":3,"sources":["/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/General/AgencySelectionComponent.js"],"names":["React","Component","ajaxGet","constants","urls","AgencySelectionComponent","props","useState","agencyValue","setAgencyValue","selectedAgency","setSelectedAgency","handleChangeInAgency","event","target","value","onSelectedAgency","useEffect","agencyData","uri","API_URL","GET_AGENCY_LIST_URL","response","status","STATUS_ACTIVE","content","agencyArray","map","agency","index","id","role_name"],"mappings":";;;AAAA;;;AAGA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,0BAAtB;AACA,OAAO,KAAKC,SAAZ,MAA2B,uBAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,kBAAtB;AACA,OAAO,eAAP;;AAEA,MAAMC,wBAAwB,GAAIC,KAAD,IAAU;AAAA,0BACDN,KAAK,CAACO,QAAN,CAAe,EAAf,CADC;AAAA;AAAA,QAChCC,WADgC;AAAA,QACnBC,cADmB;;AAAA,2BAEIT,KAAK,CAACO,QAAN,CAAe,EAAf,CAFJ;AAAA;AAAA,QAEhCG,cAFgC;AAAA,QAEjBC,iBAFiB;;AAGvC,QAAOC,oBAAoB,GAAIC,KAAD,IAAW;AACrCF,IAAAA,iBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACAT,IAAAA,KAAK,CAACU,gBAAN,CAAuBH,KAAK,CAACC,MAAN,CAAaC,KAApC;AACH,GAHD;;AAIAf,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClB,QAAIC,UAAJ;AACA,QAAIC,GAAG,GAAGf,IAAI,CAACgB,OAAL,CAAaC,mBAAvB;AACAnB,IAAAA,OAAO,CAACiB,GAAD,EAAOG,QAAD,IAAc;AACvB,UAAIA,QAAQ,CAACC,MAAT,KAAoBC,aAAxB,EAAuC;AACnCN,QAAAA,UAAU,GAAGI,QAAQ,CAACG,OAAtB;AACA,YAAIC,WAAW,GAAGR,UAAU,CAACS,GAAX,CAAeC,MAAM,IAAI;AACvC,iBAAO;AAACA,YAAAA;AAAD,WAAP;AACH,SAFiB,CAAlB;AAGAnB,QAAAA,cAAc,CAACiB,WAAD,CAAd;AACH;AACJ,KARM,CAAP;AASH,GAZD,EAYG,EAZH;AAaA,SACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,mCAAlB;AAAsD,IAAA,QAAQ,EAAEd,oBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,KAAK,EAAC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKJ,WAAW,CAACmB,GAAZ,CAAiB,CAACZ,KAAD,EAAQc,KAAR,KAAkB;AAChC,WAAO;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,KAAK,EAAEd,KAAK,CAACa,MAAN,CAAaE,EAAtD;AAA0D,MAAA,GAAG,EAAED,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuEd,KAAK,CAACa,MAAN,CAAaG,SAApF,CAAP;AACH,GAFA,CAFL,CAFJ,CADJ;AAWH,CA/BD;AAiCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,eAAe1B,wBAAf","sourcesContent":["/**\n * Created by Basil on 03/02/2020.\n */\nimport React, {Component} from 'react';\nimport {ajaxGet} from '../../Services/Http/Ajax';\nimport * as constants from '../../Utils/Constants'\nimport * as urls from '../../Utils/Urls'\nimport '../../App.css';\n\nconst AgencySelectionComponent = (props) =>{\n    const [agencyValue, setAgencyValue] = React.useState('');\n    const [selectedAgency,setSelectedAgency] = React.useState('');\n    const  handleChangeInAgency = (event) => {\n        setSelectedAgency(event.target.value);\n        props.onSelectedAgency(event.target.value);\n    };\n    React.useEffect(() => {\n        let agencyData;\n        let uri = urls.API_URL.GET_AGENCY_LIST_URL;\n        ajaxGet(uri, (response) => {\n            if (response.status === STATUS_ACTIVE) {\n                agencyData = response.content;\n                let agencyArray = agencyData.map(agency => {\n                    return {agency}\n                });\n                setAgencyValue(agencyArray);\n            }\n        });\n    }, []);\n    return (\n        <div className=\"agency-data\">\n            <span className=\"btn\">Agency: </span>\n            <select className=\"dropdown-toggle btn btn-secondary\" onChange={handleChangeInAgency}>\n                <option className=\"dropdown-item\" value=\"\">Select Options</option>\n                {agencyValue.map( (value, index) => {\n                    return <option className=\"dropdown-item\" value={value.agency.id} key={index}>{value.agency.role_name}</option>\n                })  }\n            </select>\n        </div>\n    )\n}\n\n/*class AgencySelectionComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            agencyValue: [],\n            selectedAgency: null\n        };\n        this.handleChangeInAgency = this.handleChangeInAgency.bind(this);\n    };\n\n    componentDidMount = () => {\n        let agencyData;\n        let uri = urls.API_URL.GET_AGENCY_LIST_URL;\n        console.log(uri);\n        ajaxGet(uri, (response) => {\n            if (response.status === constants.STATUS_ACTIVE) {\n                agencyData = response.content;\n                let agencyArray = agencyData.map(agency => {\n                    return {agency}\n                });\n                this.setState({\n                    agencyValue: agencyArray,\n                });\n            }\n        });\n    };\n\n    handleChangeInAgency = (e) => {\n        this.setState({\n            selectedAgency: e.target.value\n        });\n        this.props.onSelectedAgency(e.target.value);\n    };\n\n    render() {\n        return (\n            <div className=\"agency-data\">\n                <span className=\"btn\">Agency: </span>\n                <select className=\"dropdown-toggle btn btn-secondary\" onChange={this.handleChangeInAgency}>\n                    <option className=\"dropdown-item\" value=\"\">Select Options</option>\n                    {this.state.agencyValue.map( (value, index) => {\n                        return <option className=\"dropdown-item\" value={value.agency.id} key={index}>{value.agency.role_name}</option>\n                    })  }\n                </select>\n            </div>\n        )\n    }\n}*/\nexport default AgencySelectionComponent;"]},"metadata":{},"sourceType":"module"}