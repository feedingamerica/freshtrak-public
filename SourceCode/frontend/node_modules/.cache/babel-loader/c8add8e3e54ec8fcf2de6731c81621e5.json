{"ast":null,"code":"import _slicedToArray from \"/var/www/html/midOhio/fresh-trak/sourceCode/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/Agency/AgencyComponent.js\";\nimport React, { useState } from 'react';\nimport 'react-bootstrap';\nimport { ajaxPost } from '../../Services/Http/Ajax';\nimport * as constants from '../../Utils/Constants';\nimport { Redirect } from 'react-router-dom';\nimport Utils from '../../Utils/Util';\nimport * as urls from '../../Utils/Urls';\nimport { Form } from 'react-bootstrap';\nimport '../../App.css';\nimport { ToastContainer } from \"react-toastify\";\nimport { validateName, validateAddress } from '../../Utils/Validation';\nlet isNameValid,\n    isAddressValid = false;\n\nconst AgencyComponent = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        esign = _useState2[0],\n        setSign = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setData = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        nickname = _useState8[0],\n        setNickname = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        status_id = _useState10[0],\n        setStatus_id = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        address1 = _useState12[0],\n        setAddress1 = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        address2 = _useState14[0],\n        setAddress2 = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        logo = _useState16[0],\n        setLogo = _useState16[1];\n\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        notes = _useState18[0],\n        setNotes = _useState18[1];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let agencyDetails = {\n      name: name,\n      nickname: nickname,\n      status_id: status_id,\n      address1: address1,\n      address2: address2,\n      esign: esign,\n      data: data,\n      logo: logo,\n      notes: notes\n    };\n\n    if (agencyDetails) {\n      let uri = urls.API_URL.AGENCY_URL;\n\n      if (isAddressValid && isNameValid) {\n        ajaxPost(uri, agencyDetails, response => {\n          if (response.status === constants.STATUS_ACTIVE) {\n            Utils.showMessage('success', 'Agency details added');\n          }\n        });\n      }\n    } else {\n      Utils.showMessage('error', 'Enter agency details');\n    }\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    let name = e.target.name;\n\n    switch (name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n\n      case 'nickname':\n        setNickname(e.target.value);\n        break;\n\n      case 'address1':\n        setAddress1(e.target.value);\n        break;\n\n      case 'address2':\n        setAddress2(e.target.value);\n        break;\n\n      case 'esign':\n        setSign(e.target.checked);\n        break;\n\n      case 'data':\n        setData(e.target.checked);\n        break;\n\n      case 'logo':\n        setLogo(e.target.value);\n        break;\n\n      case 'notes':\n        setNotes(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const validateName = e => {\n    if (name.length > 3 && name) {\n      isNameValid = true;\n    } else {\n      isNameValid = false;\n      Utils.showMessage('error', 'Username should not be empty and contain more than 3 letters');\n    }\n  };\n\n  const validatePrimaryAddress = e => {\n    const address = e.target.value;\n\n    if (address && validateAddress(address1)) {\n      isAddressValid = true;\n    } else {\n      isAddressValid = false;\n      Utils.showMessage('error', 'Enter a valid address');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container col-10 col-md-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Agency\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Organization name\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    placeholder: \"org name\",\n    onChange: handleChange,\n    onBlur: validateName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Organization nick name\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"nickname\",\n    name: \"nickname\",\n    placeholder: \"nick name\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Address 1\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"address1\",\n    name: \"address1\",\n    placeholder: \"address1\",\n    onChange: handleChange,\n    onBlur: validatePrimaryAddress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Address 2\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"address2\",\n    name: \"address2\",\n    placeholder: \"address2\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"eSign\"), React.createElement(Form.Check, {\n    type: \"checkbox\",\n    name: \"esign\",\n    checked: esign,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"data\"), React.createElement(Form.Check, {\n    type: \"checkbox\",\n    name: \"data\",\n    checked: data,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Logo\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"logo\",\n    name: \"logo\",\n    placeholder: \"logo\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"notes\",\n    name: \"notes\",\n    placeholder: \"notes\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))));\n};\n\nexport default AgencyComponent;","map":{"version":3,"sources":["/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/Agency/AgencyComponent.js"],"names":["React","useState","ajaxPost","constants","Redirect","Utils","urls","Form","ToastContainer","validateName","validateAddress","isNameValid","isAddressValid","AgencyComponent","esign","setSign","data","setData","name","setName","nickname","setNickname","status_id","setStatus_id","address1","setAddress1","address2","setAddress2","logo","setLogo","notes","setNotes","handleSubmit","e","preventDefault","agencyDetails","uri","API_URL","AGENCY_URL","response","status","STATUS_ACTIVE","showMessage","handleChange","target","value","checked","length","validatePrimaryAddress","address"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport 'react-bootstrap'\nimport {ajaxPost} from '../../Services/Http/Ajax';\nimport * as constants from '../../Utils/Constants'\nimport {Redirect} from 'react-router-dom';\nimport Utils from '../../Utils/Util';\nimport * as urls from '../../Utils/Urls'\nimport {Form} from 'react-bootstrap'\nimport '../../App.css';\nimport {ToastContainer} from \"react-toastify\";\nimport {validateName,validateAddress} from '../../Utils/Validation';\nlet isNameValid, isAddressValid = false;\n\nconst AgencyComponent = () => {\n\n    const [esign,setSign] = useState(false);\n    const [data,setData] = useState(false);\n    const [name,setName] = useState('');\n    const [nickname,setNickname] = useState('');\n    const [status_id,setStatus_id] = useState('');\n    const [address1,setAddress1] = useState('');\n    const [address2,setAddress2] = useState('');\n    const [logo,setLogo] = useState('');\n    const [notes,setNotes] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let agencyDetails = {\n            name: name,\n            nickname: nickname,\n            status_id: status_id,\n            address1: address1,\n            address2: address2,\n            esign: esign,\n            data: data,\n            logo: logo,\n            notes: notes,\n        };\n        if (agencyDetails) {\n            let uri = urls.API_URL.AGENCY_URL;\n            if (isAddressValid && isNameValid) {\n                ajaxPost(uri, agencyDetails, (response) => {\n                    if (response.status === constants.STATUS_ACTIVE) {\n                        Utils.showMessage('success', 'Agency details added')\n                    }\n                });\n            }\n        }\n        else {\n            Utils.showMessage('error', 'Enter agency details')\n        }\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        let name = e.target.name;\n        switch (name) {\n            case 'name':\n                setName(e.target.value);\n                break;\n            case 'nickname':\n                setNickname(e.target.value);\n                break;\n            case 'address1':\n                setAddress1(e.target.value);\n                break;\n            case 'address2':\n                setAddress2(e.target.value);\n                break;\n            case 'esign':\n                setSign(e.target.checked);\n                break;\n            case 'data':\n                setData(e.target.checked);\n                break;\n            case 'logo':\n                setLogo(e.target.value);\n                break;\n            case 'notes':\n                setNotes(e.target.value);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const validateName = (e) => {\n        if ((name.length > 3) && (name)){\n            isNameValid = true;\n        }\n        else {\n            isNameValid = false;\n            Utils.showMessage('error', 'Username should not be empty and contain more than 3 letters')\n        }\n    };\n\n    const validatePrimaryAddress = (e) => {\n        const address = e.target.value;\n        if ((address) && validateAddress(address1)) {\n            isAddressValid = true;\n        }\n            else {\n            isAddressValid = false;\n                Utils.showMessage('error','Enter a valid address')\n            }\n        };\n\n        return (\n            <div className=\"container col-10 col-md-10\" >\n                <ToastContainer/>\n                <p>Agency</p>\n                <form onSubmit={handleSubmit}>\n                <label>Organization name</label>\n                <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"org name\" onChange={handleChange}\n                        onBlur={validateName}/>\n                <label>Organization nick name</label>\n                <input type=\"text\" id=\"nickname\" name=\"nickname\" placeholder=\"nick name\" onChange={handleChange}/>\n                <label>Address 1</label>\n                <input type=\"text\" id=\"address1\" name=\"address1\" placeholder=\"address1\" onChange={handleChange}\n                        onBlur={validatePrimaryAddress}/>\n                <label>Address 2</label>\n                <input type=\"text\" id=\"address2\" name=\"address2\" placeholder=\"address2\" onChange={handleChange}/>\n                <label type=\"text\">eSign</label>\n                <Form.Check type=\"checkbox\" name=\"esign\" checked={esign} onChange = {handleChange} />\n                    <br/>\n                    <br/>\n                <label type=\"text\">data</label>\n                <Form.Check type=\"checkbox\" name=\"data\" checked={data} onChange = {handleChange} />\n                    <br/>\n                <label>Logo</label>\n                <input type=\"text\" id=\"logo\" name=\"logo\" placeholder=\"logo\" onChange={handleChange}/>\n                <label>Notes</label>\n                <input type=\"text\" id=\"notes\" name=\"notes\" placeholder=\"notes\" onChange={handleChange}/>\n                    <p><input type=\"submit\"/></p>\n                </form>\n            </div>\n        )\n};\nexport default AgencyComponent"]},"metadata":{},"sourceType":"module"}