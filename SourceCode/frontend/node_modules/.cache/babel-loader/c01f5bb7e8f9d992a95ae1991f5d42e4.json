{"ast":null,"code":"var _jsxFileName = \"/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/MenuPermission/MenuPermissionComponent.js\";\n\n/**\n * Created by Basil on 6/1/20.\n */\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport Utils from '../../Utils/Util';\nimport * as constants from '../../Utils/Constants';\nimport { ajaxPost, ajaxPut } from '../../Services/Http/Ajax';\nimport Checkbox from \"../General/CheckBoxComponent\";\nimport { ToastContainer } from \"react-toastify\";\n\nclass MenuPermissionComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidUpdate = prevProps => {\n      this.getMenuPermissionData(prevProps);\n    };\n\n    this.getMenuPermissionData = prevProps => {\n      if (prevProps.menuId !== this.props.menuId || prevProps.roleId !== this.props.roleId) {\n        let roleId = this.props.roleId;\n        let mainMenuId = this.props.menuId;\n\n        if (roleId && mainMenuId) {\n          let data = {\n            roleId: roleId,\n            menuId: mainMenuId\n          };\n          let uri = constants.BASE_URL + '/api/menu/permission';\n          ajaxPost(uri, data, this.getMenuPermissionDataSuccess);\n        }\n      }\n    };\n\n    this.getMenuPermissionDataSuccess = response => {\n      if (response.status === constants.STATUS_ACTIVE) {\n        let menuData;\n        menuData = response.content;\n        let subMenuArray = menuData.map(subMenus => {\n          const item = subMenus.sub_menu_id;\n          const isChecked = subMenus.is_active === constants.STATUS_ACTIVE;\n          this.setState(prevState => ({\n            checkedItems: prevState.checkedItems.set(item, isChecked)\n          }));\n          return {\n            subMenus\n          };\n        });\n        this.setState({\n          subMenuArray: subMenuArray,\n          menuFetched: true,\n          isMainMenuActive: subMenuArray[0].subMenus.is_active\n        });\n      }\n    };\n\n    this.putMenuPermissionData = e => {\n      let putData = {\n        data: {\n          menu_permission_id: e.target.getAttribute(\"dataid\"),\n          is_active: e.target.checked\n        }\n      };\n      let uri = constants.BASE_URL + '/api/menu/permission';\n      ajaxPut(uri, putData, response => {\n        if (response.status === constants.STATUS_ACTIVE) {\n          Utils.showMessage('success', response.message);\n        }\n      });\n    };\n\n    this.makeSubMenuCheckBoxDisabled = e => {\n      this.setState({\n        isMainMenuActive: e.target.checked\n      });\n    };\n\n    this.state = {\n      checkedItems: new Map(),\n      menuFetched: false,\n      subMenuArray: [],\n      isMainMenuActive: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const item = parseInt(e.target.id);\n    const isChecked = e.target.checked;\n    this.setState(prevState => ({\n      checkedItems: prevState.checkedItems.set(item, isChecked)\n    }));\n    this.putMenuPermissionData(e);\n  }\n\n  render() {\n    const menuFetched = this.state.menuFetched;\n    const menuDetails = this.state.subMenuArray;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"MenuComponent\", React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"menu-permission\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, menuFetched && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" \", menuDetails[0].subMenus.menu_name, \" \", React.createElement(\"input\", {\n      onChange: this.makeSubMenuCheckBoxDisabled,\n      checked: this.state.isMainMenuActive,\n      type: \"checkBox\",\n      name: \"menuPermission\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), menuDetails.map((value, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, value.subMenus.sub_menu_name, \" \", React.createElement(Checkbox, {\n        name: `submenu-${value.subMenus.sub_menu_id}`,\n        dataid: value.subMenus.menu_permission_id,\n        id: value.subMenus.sub_menu_id,\n        checked: this.state.checkedItems.get(value.subMenus.sub_menu_id),\n        disabled: !this.state.isMainMenuActive,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }))));\n  }\n\n}\n\nexport default MenuPermissionComponent;","map":{"version":3,"sources":["/var/www/html/midOhio/fresh-trak/sourceCode/frontend/src/Modules/MenuPermission/MenuPermissionComponent.js"],"names":["React","Component","Utils","constants","ajaxPost","ajaxPut","Checkbox","ToastContainer","MenuPermissionComponent","constructor","props","componentDidUpdate","prevProps","getMenuPermissionData","menuId","roleId","mainMenuId","data","uri","BASE_URL","getMenuPermissionDataSuccess","response","status","STATUS_ACTIVE","menuData","content","subMenuArray","map","subMenus","item","sub_menu_id","isChecked","is_active","setState","prevState","checkedItems","set","menuFetched","isMainMenuActive","putMenuPermissionData","e","putData","menu_permission_id","target","getAttribute","checked","showMessage","message","makeSubMenuCheckBoxDisabled","state","Map","handleChange","bind","parseInt","id","render","menuDetails","menu_name","value","index","sub_menu_name","get"],"mappings":"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","sourcesContent":["/**\n * Created by Basil on 6/1/20.\n */\nimport React, {Component} from 'react';\nimport '../../App.css';\nimport Utils from '../../Utils/Util';\nimport * as constants from '../../Utils/Constants';\nimport {ajaxPost,ajaxPut} from '../../Services/Http/Ajax';\nimport Checkbox from \"../General/CheckBoxComponent\";\nimport {ToastContainer} from \"react-toastify\";\nclass MenuPermissionComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            checkedItems: new Map(),\n            menuFetched: false,\n            subMenuArray: [],\n            isMainMenuActive: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidUpdate = (prevProps) => {\n       this.getMenuPermissionData(prevProps);\n    };\n\n    getMenuPermissionData = (prevProps) => {\n        if((prevProps.menuId !== this.props.menuId) || prevProps.roleId !== this.props.roleId) {\n            let roleId = this.props.roleId;\n            let mainMenuId = this.props.menuId;\n            if (roleId && mainMenuId) {\n                let data = {\n                    roleId: roleId,\n                    menuId: mainMenuId\n                };\n                let uri = constants.BASE_URL + '/api/menu/permission';\n                ajaxPost(uri, data, this.getMenuPermissionDataSuccess)\n            }\n        }\n    };\n\n    getMenuPermissionDataSuccess = (response) => {\n        if (response.status === constants.STATUS_ACTIVE) {\n            let menuData;\n            menuData = response.content;\n            let subMenuArray = menuData.map(subMenus => {\n                const item = subMenus.sub_menu_id;\n                const isChecked = subMenus.is_active === constants.STATUS_ACTIVE;\n                this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }))\n                return {subMenus}\n            });\n            this.setState({\n                subMenuArray: subMenuArray,\n                menuFetched: true,\n                isMainMenuActive: subMenuArray[0].subMenus.is_active\n            });\n        }\n    };\n\n    putMenuPermissionData = (e) => {\n        let putData = {\n            data: {\n                menu_permission_id: e.target.getAttribute(\"dataid\"),\n                is_active: e.target.checked\n            }\n        };\n        let uri = constants.BASE_URL + '/api/menu/permission';\n        ajaxPut(uri, putData, (response) => {\n            if (response.status === constants.STATUS_ACTIVE) {\n                Utils.showMessage('success', response.message)\n            }\n        });\n    };\n\n    makeSubMenuCheckBoxDisabled = (e) => {\n        this.setState({\n            isMainMenuActive: e.target.checked\n        });\n    };\n\n    handleChange(e) {\n        const item = parseInt(e.target.id);\n        const isChecked = e.target.checked;\n        this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n        this.putMenuPermissionData(e);\n    };\n\n    render() {\n        const { menuFetched } = this.state;\n        const menuDetails = this.state.subMenuArray;\n        return (\n            <div>MenuComponent\n                <ToastContainer/>\n                <div className=\"menu-permission\">\n                    {\n                        menuFetched && (\n                        <div> <b> {menuDetails[0].subMenus.menu_name} <input onChange={this.makeSubMenuCheckBoxDisabled} checked={this.state.isMainMenuActive} type=\"checkBox\" name=\"menuPermission\"/></b>\n                            { menuDetails.map( (value, index) => {\n                                return <div key={index}>{value.subMenus.sub_menu_name} <Checkbox name={`submenu-${value.subMenus.sub_menu_id}`} dataid={value.subMenus.menu_permission_id} id={value.subMenus.sub_menu_id} checked={this.state.checkedItems.get((value.subMenus.sub_menu_id))} disabled = {!this.state.isMainMenuActive} onChange={this.handleChange} /></div>\n                            })  }\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\nexport default MenuPermissionComponent;"]},"metadata":{},"sourceType":"module"}